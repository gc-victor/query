name: Query App Deployment

on:
    push:
        branches:
            - main

jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20]

        steps:
            - name: Check out repository code
              uses: actions/checkout@v4

            - name: Create .query folder
              run: mkdir .query

            - name: Cache
              id: query-cache
              uses: actions/cache@v4
              with:
                  path: .query/.cache
                  key: query-cache

            - name: Use pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 8

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Install esbuild
              run: |
                  pnpm install --global esbuild

            - name: Download and install Query CLI
              run: |
                  curl --proto '=https' --tlsv1.2 -LsSf https://github.com/gc-victor/query/releases/latest/download/query-installer.sh | sh
                  echo "${HOME}/.cargo/bin" >> $GITHUB_PATH

            - name: Set token
              env:
                  QUERY_PRIVATE_TOKEN: ${{ secrets.QUERY_PRIVATE_TOKEN }}
              run: |
                  echo "[default] $QUERY_PRIVATE_TOKEN" > .query/.token

            - name: Create Query Configuration File
              run: |
                  mkdir -p .query
                  cat << EOF > .query/Query.toml
                  [server]
                  url = "$QUERY_APP_QUERY_SERVER"

                  [structure]
                  functions_folder = "src"
                  migrations_folder = "migrations"

                  [esbuild]
                  "loader:.html" = "text"
                  "loader:.svg" = "text"
                  EOF

            - name: Deploy
              run: make deploy -s

            - name: Cache content
              run: cat .query/.cache
