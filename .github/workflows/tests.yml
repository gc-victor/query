name: Tests

on:
  push:
    branches:
      - main
    tags:
      - "**[0-9]+.[0-9]+.[0-9]+*"
    paths-ignore:
      - "docs/**"
      - "examples/**"

  pull_request:
    paths-ignore:
      - "docs/**"
      - "examples/**"

env:
  CARGO_TERM_COLOR: always

jobs:
  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the plugin, as the cache uses the current rustc version as its cache key
      - run: rustup toolchain install stable --profile minimal
      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2
      - name: Install esbuild
        run: |
          curl -fsSL https://esbuild.github.io/dl/v0.24.0 | sh
          sudo mv ./esbuild /usr/local/bin/
          sudo chmod +x /usr/local/bin/esbuild
          esbuild --version
      - name: Run unit tests
        env:
          RUST_BACKTRACE: full
          RUST_LOG: info
          QUERY_SERVER_PORT: 3000
          QUERY_SERVER_DBS_PATH: /tmp/dbs
          QUERY_SERVER_TOKEN_SECRET: secret
          QUERY_SERVER_ADMIN_EMAIL: admin
          QUERY_SERVER_ADMIN_PASSWORD: admin
        run: |
          rustup update stable && rustup default stable
          cargo test -- --test-threads=1

  integration-test:
    name: Integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the plugin, as the cache uses the current rustc version as its cache key
      - run: rustup toolchain install stable --profile minimal
      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2
      - name: Install Hurl
        run: |
          curl -LO https://github.com/Orange-OpenSource/hurl/releases/download/5.0.1/hurl_5.0.1_amd64.deb
          sudo dpkg -i hurl_5.0.1_amd64.deb
          hurl --version
      - name: Build query-server
        env:
          RUST_BACKTRACE: full
          RUST_LOG: info
        run: |
          rustup update stable && rustup default stable
          cargo build --package=query-server --release
      - name: Run query-server
        env:
          RUST_BACKTRACE: full
          RUST_LOG: info
          QUERY_SERVER_PORT: 3000
          QUERY_SERVER_DBS_PATH: /tmp/dbs
          QUERY_SERVER_TOKEN_SECRET: secret
          QUERY_SERVER_ADMIN_EMAIL: admin
          QUERY_SERVER_ADMIN_PASSWORD: admin
          QUERY_SMTP_SERVER: ${{ secrets.QUERY_SMTP_SERVER }}
          QUERY_SMTP_USERNAME: ${{ secrets.QUERY_SMTP_USERNAME }}
          QUERY_SMTP_PASSWORD: ${{ secrets.QUERY_SMTP_PASSWORD }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
        run: |
          mkdir -p $QUERY_SERVER_DBS_PATH
          chmod +x $QUERY_SERVER_DBS_PATH
          chmod g+s $QUERY_SERVER_DBS_PATH
          target/release/query-server &
      - name: Run integration tests
        run: |
          make hurl-integration

  js-test:
    name: JS tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the plugin, as the cache uses the current rustc version as its cache key
      - run: rustup toolchain install stable --profile minimal
      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2
      - name: Install esbuild
        run: |
          curl -fsSL https://esbuild.github.io/dl/v0.24.0 | sh
          sudo mv ./esbuild /usr/local/bin/
          sudo chmod +x /usr/local/bin/esbuild
          esbuild --version
      - name: Build Query CLI
        env:
          RUST_BACKTRACE: full
          RUST_LOG: info
          QUERY_SERVER_PORT: 3000
          QUERY_SERVER_DBS_PATH: /tmp/dbs
          QUERY_SERVER_TOKEN_SECRET: secret
          QUERY_SERVER_ADMIN_EMAIL: admin
          QUERY_SERVER_ADMIN_PASSWORD: admin
          QUERY_SMTP_SERVER: ${{ secrets.QUERY_SMTP_SERVER }}
          QUERY_SMTP_USERNAME: ${{ secrets.QUERY_SMTP_USERNAME }}
          QUERY_SMTP_PASSWORD: ${{ secrets.QUERY_SMTP_PASSWORD }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
        run: |
          rustup update stable && rustup default stable
          cargo build --package=query --release
      - name: Create a Query Config File
        run: |
          mkdir .query
          touch .query/Query.toml
          cat << EOF > .query/Query.toml
            [server]
            url = "http://localhost:3000"
          EOF
      - name: Run JS tests
        run: |
          target/release/query test crates/runtime/src/js/ -s
